'use client';

import React, { useEffect } from 'react';
import { Form, Input, Select, Button, Row, Col, message } from 'antd';
import { Intern, InternFormData } from '@/types';
import { internService } from '@/services/api';

const { Option } = Select;
const { TextArea } = Input;

interface InternFormProps {
    intern?: Intern | null;
    onSubmit: () => void;
    onCancel: () => void;
}

const InternForm: React.FC<InternFormProps> = ({ intern, onSubmit, onCancel }) => {
    const [form] = Form.useForm();

    useEffect(() => {
        if (intern) {
            form.setFieldsValue({
                ...intern,
            });
        } else {
            form.resetFields();
        }
    }, [intern, form]);

    const handleSubmit = async (values: any) => {
        message.loading({
            content: intern ? '‚è≥ ƒêang c·∫≠p nh·∫≠t th√¥ng tin sinh vi√™n...' : '‚è≥ ƒêang l∆∞u th√¥ng tin sinh vi√™n...',
            duration: 0
        });

        try {
            const formData: InternFormData = {
                ...values,
            };

            if (intern) {
                await internService.updateIntern(intern._id, formData);
            } else {
                await internService.createIntern(formData);
            }

            message.destroy(); // Clear loading message
            message.success({
                content: (
                    <div>
                        <div style={{ fontWeight: 'bold', marginBottom: 4 }}>
                            ‚úÖ {intern ? 'C·∫≠p nh·∫≠t th√†nh c√¥ng!' : 'L∆∞u th√¥ng tin th√†nh c√¥ng!'}
                        </div>
                        <div style={{ fontSize: '12px', color: '#666' }}>
                            Sinh vi√™n: {values.student_name || 'N/A'}
                            <br />
                            M√£ sinh vi√™n: {values.student_id || 'N/A'}
                        </div>
                    </div>
                ),
                duration: 3
            });

            onSubmit();
        } catch (error: any) {
            message.destroy(); // Clear loading message
            if (error.response?.status === 400) {
                message.error({
                    content: (
                        <div>
                            <div style={{ fontWeight: 'bold', marginBottom: 4 }}>
                                ‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá
                            </div>
                            <div style={{ fontSize: '12px', color: '#666' }}>
                                {error.response?.data?.error || 'Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin ƒë√£ nh·∫≠p'}
                            </div>
                        </div>
                    ),
                    duration: 5
                });
            } else {
                message.error({
                    content: (
                        <div>
                            <div style={{ fontWeight: 'bold', marginBottom: 4 }}>
                                üîå L·ªói khi l∆∞u th√¥ng tin
                            </div>
                            <div style={{ fontSize: '12px', color: '#666' }}>
                                Kh√¥ng th·ªÉ l∆∞u th√¥ng tin sinh vi√™n th·ª±c t·∫≠p. Vui l√≤ng th·ª≠ l·∫°i.
                            </div>
                        </div>
                    ),
                    duration: 5
                });
            }
        }
    };

    return (
        <Form
            form={form}
            layout="vertical"
            onFinish={handleSubmit}
            initialValues={{ status: 'pending' }}
        >
            <Row gutter={16}>
                <Col span={12}>
                    <Form.Item
                        label="ƒê·ª£t th·ª±c t·∫≠p"
                        name="internship_period"
                        rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p ƒë·ª£t th·ª±c t·∫≠p' }]}
                    >
                        <Input placeholder="VD: K·ª≥ th·ª±c t·∫≠p m√πa h√® 2024" />
                    </Form.Item>
                </Col>
                <Col span={12}>
                    <Form.Item
                        label="H·ªç v√† t√™n"
                        name="full_name"
                        rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p h·ªç v√† t√™n' }]}
                    >
                        <Input placeholder="Nh·∫≠p h·ªç v√† t√™n sinh vi√™n" />
                    </Form.Item>
                </Col>
            </Row>

            <Row gutter={16}>
                <Col span={12}>
                    <Form.Item
                        label="M√£ s·ªë sinh vi√™n"
                        name="student_id"
                        rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p MSSV' }]}
                    >
                        <Input placeholder="Nh·∫≠p m√£ s·ªë sinh vi√™n" />
                    </Form.Item>
                </Col>
                <Col span={12}>
                    <Form.Item
                        label="L·ªõp"
                        name="class_name"
                    >
                        <Input placeholder="Nh·∫≠p l·ªõp" />
                    </Form.Item>
                </Col>
            </Row>

            <Row gutter={16}>
                <Col span={12}>
                    <Form.Item
                        label="S·ªë ƒëi·ªán tho·∫°i"
                        name="phone"
                    >
                        <Input placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" />
                    </Form.Item>
                </Col>
                <Col span={12}>
                    <Form.Item
                        label="Email"
                        name="email"
                        rules={[
                            { required: true, message: 'Vui l√≤ng nh·∫≠p email' },
                            { type: 'email', message: 'Email kh√¥ng h·ª£p l·ªá' }
                        ]}
                    >
                        <Input placeholder="Nh·∫≠p email" />
                    </Form.Item>
                </Col>
            </Row>

            <Row gutter={16}>
                <Col span={12}>
                    <Form.Item
                        label="V·ªã tr√≠ th·ª±c t·∫≠p"
                        name="position"
                    >
                        <Input placeholder="Nh·∫≠p v·ªã tr√≠ th·ª±c t·∫≠p" />
                    </Form.Item>
                </Col>
                <Col span={12}>
                    <Form.Item
                        label="Tr·∫°ng th√°i"
                        name="status"
                    >
                        <Select placeholder="Ch·ªçn tr·∫°ng th√°i">
                            <Option value="pending">Ch·ªù duy·ªát</Option>
                            <Option value="approved">ƒê√£ duy·ªát</Option>
                            <Option value="rejected">B·ªã t·ª´ ch·ªëi</Option>
                            <Option value="in_progress">ƒêang th·ª±c t·∫≠p</Option>
                            <Option value="completed">Ho√†n th√†nh</Option>
                            <Option value="cancelled">H·ªßy b·ªè</Option>
                        </Select>
                    </Form.Item>
                </Col>
            </Row>

            <Row gutter={16}>
                <Col span={24}>
                    <Form.Item
                        label="Ghi ch√∫"
                        name="notes"
                    >
                        <TextArea rows={3} placeholder="Nh·∫≠p ghi ch√∫" />
                    </Form.Item>
                </Col>
            </Row>

            <Row gutter={16}>
                <Col span={24}>
                    <Form.Item
                        label="Ph·∫£n h·ªìi t·ª´ b·ªô ph·∫≠n ti·∫øp nh·∫≠n th·ª±c t·∫≠p"
                        name="department_feedback"
                    >
                        <TextArea rows={3} placeholder="Nh·∫≠p ph·∫£n h·ªìi t·ª´ b·ªô ph·∫≠n" />
                    </Form.Item>
                </Col>
            </Row>

            <Row gutter={16}>
                <Col span={24}>
                    <Form.Item
                        label="Ghi ch√∫ th√™m"
                        name="additional_notes"
                    >
                        <TextArea rows={3} placeholder="Nh·∫≠p ghi ch√∫ th√™m" />
                    </Form.Item>
                </Col>
            </Row>

            <Form.Item style={{ marginTop: '24px', textAlign: 'right' }}>
                <Button onClick={onCancel} style={{ marginRight: '8px' }}>
                    H·ªßy
                </Button>
                <Button type="primary" htmlType="submit">
                    {intern ? 'C·∫≠p nh·∫≠t' : 'Th√™m'}
                </Button>
            </Form.Item>
        </Form>
    );
};

export default InternForm;
